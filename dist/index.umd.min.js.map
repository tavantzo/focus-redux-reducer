{"version":3,"sources":["webpack://boilerplate/webpack/universalModuleDefinition","webpack://boilerplate/webpack/bootstrap","webpack://boilerplate/./src/Reducer.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","INITIAL_STATE","ReducerFactory","state","this","Create","initialState","reducer","action","type","payload","extraParams","__rest","hasProto","updateState","mapActionToMethod","method","default","bind","updateStateProp","attribute","_a","newProps","__assign","currentStateCopy","removeStateProp","length","TypeError","methodExists","constructor"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,YAAAD,IAEAD,EAAA,YAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,qhBCjEIC,KAmBJC,EAAA,WAGI,SAAAA,EAA8BC,GAAAC,KAAAD,QAgGlC,OAxFWD,EAAAG,OAAP,SAAcC,GACV,IAAMC,EAA0B,IAAIH,KAAKE,GAEzC,OAAO,SAA+BH,EAAkCK,QAAlC,IAAAL,MAAAG,GAC1B,IAAAG,EAAAD,EAAAC,KAAMC,EAAAF,EAAAE,QAASC,EAAAC,EAAAJ,GAAA,mBAKvB,GAHAJ,KAAKD,MAAQA,EAGTU,EAAST,KAAMK,GACf,OAAOL,KAAKU,YAAYV,KAAKK,GAAM9B,KAAKyB,KAAMM,EAASC,IAI3D,GAAIF,KAAQL,KAAKW,oBAAqB,CAClC,IAAMC,EAASZ,KAAKW,oBAAoBN,GACxC,OAAOL,KAAKU,YAAYE,EAAOrC,KAAKyB,KAAMM,EAASC,IAIvD,OAAIE,EAAST,KAAM,WAERA,KAAKU,YAAYV,KAAKa,QAAQtC,KAAKyB,KAAMM,EAASC,IAItDR,GACTe,KAAKX,IAUXL,EAAAL,UAAAkB,kBAAA,WACI,UAYJb,EAAAL,UAAAsB,gBAAA,SAAgBC,EAAmB5B,GAC/B,OAAOY,KAAKU,cAAWO,MAAID,GAAY5B,EAAK6B,WAUhDnB,EAAAL,UAAAiB,YAAA,SAAYQ,GAER,OADAlB,KAAKD,MAAKoB,KAAQnB,KAAKD,MAAUmB,GAC1BlB,KAAKD,OAShBD,EAAAL,UAAA2B,iBAAA,WACI,OAAAD,KAAYnB,KAAKD,QAWrBD,EAAAL,UAAA4B,gBAAA,SAAgB7B,GAEZ,cADOQ,KAAKD,MAAMP,GAClB2B,KAAYnB,KAAKD,MAAUF,IAEnCC,EAnGA,GA4GMW,EAAW,SAAClB,EAAwBZ,GACtC,GAAoB,iBAATA,GAAsC,IAAhBA,EAAK2C,OAClC,MAAM,IAAIC,UAAU,8DAGxB,OAViB,SAAChC,EAAwBZ,GAC1C,OAAOY,EAAOG,eAAef,IACE,mBAAjBY,EAAOZ,GAQd6C,CAAajC,EAAOkC,YAAYhC,UAAWd","file":"index.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"boilerplate\"] = factory();\n\telse\n\t\troot[\"boilerplate\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { AnyAction, Reducer as ReduxReducer } from \"redux\";\n\nlet INITIAL_STATE = {};\n\nexport interface State {\n    [props:string]: any;\n}\n\nexport interface Action<T = string, P = any> extends AnyAction {\n    type: T;\n    payload: P;\n    [extraParams:string]: any;\n}\n\n/**\n * A base class for create class based reducers where methods are the action.type\n * to avoid the ugly looking switch block. Any reducer class must extemd tha class\n *\n * @export\n * @class ReducerProvider\n */\nexport class ReducerFactory<S = State, A = Action>{\n    [prop: string]: any;\n\n    protected constructor(private state: State) {}\n\n    /**\n     * Returns a Redux reducer compatible function to be attached at a Redux store\n     *\n     * @returns function\n     * @memberof ReducerFactory\n     */\n    static Create(initialState: State): ReduxReducer<State, Action<string, any>> {\n        const reducer: ReducerFactory = new this(initialState);\n\n        return function(this: ReducerFactory, state: State | {} = initialState, action: Action): State {\n            const { type, payload, ...extraParams } = action;\n            // update the inner state with the given state\n            this.state = state;\n\n            // Check if the object a method that matched the 'type' arguments\n            if (hasProto(this, type)) {\n                return this.updateState(this[type].call(this, payload, extraParams));\n            }\n\n            // Check if there is a mapped type with a method\n            if (type in this.mapActionToMethod()) {\n                const method = this.mapActionToMethod()[type];\n                return this.updateState(method.call(this, payload, extraParams));\n            }\n\n            // Check if there is a default method\n            if (hasProto(this, 'default')) {\n                // @ts-ignore: Issue has handled by the check above\n                return this.updateState(this.default.call(this, payload, extraParams));\n            }\n\n            // All checks failed, just return the state as is.\n            return state;\n        }.bind(reducer);\n    }\n\n    /**\n     * Returns an object that propnaierties are action names/types, while the value is a callable.\n     * Override to map actions with reducer methods.\n     *\n     * @returns object {ACTION_NAME: callable(state = [], payload, extra_params)}\n     * @memberof ReducerFactory\n     */\n    mapActionToMethod(): State {\n        return {};\n    }\n\n    /**\n     * A helper method that returns a new state\n     *\n     * @param object The current state\n     * @param string The property name to add/update\n     * @param {any} The new value\n     * @returns object A new state object\n     * @memberof ReducerFactory\n     */\n    updateStateProp(attribute: string, value: any): State {\n        return this.updateState({ [attribute]: value });\n    }\n\n    /**\n     * Merges the current state with the given props and returns a fresh state object\n     *\n     * @param object newProps\n     * @returns object The new state\n     * @memberof ReducerFactory\n     */\n    updateState(newProps: State): State {\n        this.state = { ...this.state, ...newProps };\n        return this.state;\n    }\n\n    /**\n     * Returns a copy of the current state\n     *\n     * @returns object\n     * @memberof ReducerFactory\n     */\n    currentStateCopy(): State {\n        return { ...this.state };\n    }\n\n    /**\n     * Removes a property from the current state and return a new state.\n     *\n     * @param object The current state\n     * @param string The property name\n     * @returns object A new state object\n     * @memberof ReducerFactory\n     */\n    removeStateProp(property: string): State {\n        delete this.state[property];\n        return { ...this.state, ...INITIAL_STATE };\n    }\n}\n\n/* HELPERS */\n\nconst methodExists = (object: ReducerFactory, name: string): boolean => {\n    return object.hasOwnProperty(name)\n        && typeof object[name] === 'function';\n};\n\nconst hasProto = (object: ReducerFactory, name: string): boolean => {\n    if (typeof name !== 'string' || (name.length === 0)) {\n        throw new TypeError('Should `name` to be of type `string` and not empty `value`');\n    }\n\n    return methodExists(object.constructor.prototype, name);\n};"],"sourceRoot":""}